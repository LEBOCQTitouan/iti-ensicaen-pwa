import {Box, Container, Grid} from "@mui/material";
import MenuPres from "../components/Presentation/MenuPres";
import MenuPresItem from "../components/Presentation/MenuPresItem";
import Image from 'next/image'
import Head from "next/head";

export default function Introduction() {
    return (
        <Container>
            <Head>
                <title>Avantages</title>
                <meta name="description" content="Generated by create next app"/>
            </Head>
            <main>
                <Grid container spacing={10} columns={{sm: 8, md: 12}}>
                    <Grid item xs={8}>
                        <Container>
                            <Box>
                                <h1>Avantages</h1>
                                <h2 id="cross-platform">Le cross platform</h2>
                                <p>
                                    Une PWA est totalement responsive c’est à dire que son design s’adapte de manière
                                    fluide et optimisée à tous les supports d’appareils (smartphone, tablette et
                                    ordinateur) qu’importe leur système d’exploitation. Cela économise beaucoup de temps
                                    aux développeurs qui ne développent pas différentes versions pour plusieurs OS. On
                                    peut d’ailleurs, quel que soit le système d’exploitation, utiliser des notifications
                                    push, même quand l’application n’est pas active.
                                </p>
                            </Box>
                            <Box>
                                <h2 id="consommation">Consommation en mémoire faible</h2>
                                <p>
                                    Comme l’application est conçu en langage Web, elle sera moins couteuse en mémoire
                                    dans les différents appareils actuels, ce qui est un plus non négligeable pour nos
                                    smartphones qui sont saturés d’applications. Pour avoir un exemple, l’application
                                    Tinder consomme 30 mb pour son installation applicative alors qu’en version PWA,
                                    elle ne consommera de 3 mb de mémoire. De plus, leur temps de chargement passe de
                                    11.91 secondes sur leur application android à 4.68 secondes pour la PWA.
                                </p>
                            </Box>
                            <Box>
                                <h2 id="stores">Contournement des stores d’application</h2>
                                <p>
                                    Lorsque que nous développons une application mobile nous devons payer une licence
                                    pour créer une application et la rendre disponible aux utilisateurs. La licence
                                    coûte 25 euros à vie pour le Play store et 100 euros à l’année pour l’Apple store.
                                    Ici pas besoin d’avoir une licence il suffit juste d’héberger une PWA sur un serveur
                                    et l’utilisateur pourra la télécharger via un site internet par exemple pour la
                                    récupérer directement sur son appareil. </p>
                            </Box>
                            <Box marginBottom={7}>
                                <h2 id="hors-ligne">Possibilité d’être disponible hors ligne</h2>
                                <p>
                                    L’un des nombreux avantages de cette technologie est la possibilité de fonctionner
                                    en mode hors ligne. Pour qu’elle puisse être disponible sans connexion, nous allons
                                    utiliser le cache. Dedans nous allons installer toutes les données nécessaires au
                                    fonctionnement de l’application. La deuxième solution est de passer par le <b>Service
                                    Worker</b>.
                                </p>
                            </Box>
                            <Box>
                                <h2 id="service-worker">Service Worker</h2>
                                <p>
                                    Le service Worker est l’équivalent d’un proxy entre notre pwa et notre serveur. Si
                                    notre application venait à être hors ligne et que nous lui envoyons une requête pour
                                    une demande de ressources et, le service worker pourrait nous répondre directement
                                    et nous transmettre la ressource via le cache. De plus, si l’application est en
                                    ligne et que l’on fait un appel à l’api, le service worker vérifie d’abord s’il n’a
                                    pas déjà la ressource à jour dans le cache, et si ce n’est pas le cas, il utilisera
                                    le réseau pour récupérer la réponse. Cela permet de réduire l’utilisation du réseau
                                    au minimum. Le service worker ne fonctionne que sur HTTPS, pour des raisons de
                                    sécurité.
                                </p>
                                <div style={{
                                    display: "flex", justifyContent: "center",
                                }}><Image src="/img/service_worker.png" width={800} height={200}
                                          alt="service-worker illustration"/>
                                </div>
                            </Box>
                            <Box>
                                <h2 id="mise-a-jour">Mise a jour implicite</h2>
                                <p>
                                    Un avantage non négligeable est que, comparée à une application native, une PWA
                                    n’aura pas besoin de faire de mise à jour régulièrement, car tant que l’utilisateur
                                    est connecté à internet, il a la dernière version de l’application.
                                </p>
                            </Box>
                            <Box>
                                <h2 id="ressources">Accès aux ressources de l’ordinateur</h2>
                                <p>
                                    Contrairement à un site web, via une PWA vous avez accès aux ressources de
                                    l’ordinateur, comme par exemple le Bluetooth, l’USB, ou accéder aux fichiers de
                                    l’ordinateur et partager du contenu avec d’autres applications.
                                </p>
                            </Box>
                        </Container>
                    </Grid>
                    <Grid item xs={4}>
                        <Box sx={{
                            display: {
                                xs: "none", md: "block"
                            }, position: "sticky", top: "10px",
                        }}>
                            <MenuPres title="Les avantages des PWA">
                                <MenuPresItem content="Cross platform" linkedElement="#cross-platform"/>
                                <MenuPresItem content="Consommation mémoire faible" linkedElement="#consommation"/>
                                <MenuPresItem content="Contournement des stores" linkedElement="#stores"/>
                                <MenuPresItem content="Disponible hors ligne" linkedElement="#hors-ligne"/>
                                <MenuPresItem content="Service Worker" linkedElement="#service-worker"/>
                                <MenuPresItem content="Mise à jour implicite" linkedElement="#mise-a-jour"/>
                                <MenuPresItem content="Accès aux ressources de l’ordinateur"
                                              linkedElement="#ressources"/>
                            </MenuPres>
                        </Box>
                    </Grid>
                </Grid>
            </main>
        </Container>)
}